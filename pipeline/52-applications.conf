filter {
    ###
    # This filter looks at protocol, source port and dest port and tries to 
    # determine application (e.g. http, iperf, gridftp) using a JSON map
    ##

    # First, make sure we have two ports and a protocol
    if [meta][src_port] and [meta][dst_port] and [meta][protocol] {
        # Create a lookup key for both ports 
        mutate {
            add_field => {
                "[@metadata][src_port_app_lookup_key]" => "%{[meta][protocol]}[%{[meta][src_port]}]"
                "[@metadata][dst_port_app_lookup_key]" => "%{[meta][protocol]}[%{[meta][dst_port]}]"
            }
        }
        # Now translate lookup keys to apps
        #    NOTE: Apps like GridFTP uses high ports so can't just rule those out
        translate {
            field => "[@metadata][src_port_app_lookup_key]"
            destination => "[@metadata][src_port_app]"
            override => true
            dictionary_path => "/etc/stardust/pipeline/app_names.json"
            refresh_behaviour => "replace"
            refresh_interval => 3600
        }
        translate {
            field => "[@metadata][dst_port_app_lookup_key]"
            destination => "[@metadata][dst_port_app]"
            override => true
            dictionary_path => "/etc/stardust/pipeline/app_names.json"
            refresh_behaviour => "replace"
            refresh_interval => 3600
        }
        # Now decide which we want to use.
        if [@metadata][src_port_app] and [@metadata][dst_port_app] {
            # If both had a mapping, then use the lowest port number
            if [meta][src_port] <= [meta][dst_port] {
                mutate {
                    rename => {
                        "[@metadata][src_port_app]" => "[meta][app_name]"
                    }
                    add_field => {
                        "[meta][app_port]" => "%{[meta][src_port]}"
                    }
                }
            } else {
                mutate {
                    rename => {
                        "[@metadata][dst_port_app]" => "[meta][app_name]"
                    }
                    add_field => {
                        "[meta][app_port]" => "%{[meta][dst_port]}"
                    }   
                }
            }
        } else if [@metadata][src_port_app] {
            # otherwise use src mapping since it is all we have
            mutate {
                rename => {
                    "[@metadata][src_port_app]" => "[meta][app_name]"
                }
                add_field => {
                    "[meta][app_port]" => "%{[meta][src_port]}"
                }
            }
        } else if [@metadata][dst_port_app] {
            # otherwise use dst mapping since it is all we have
            mutate {
                rename => {
                    "[@metadata][dst_port_app]" => "[meta][app_name]"
                }
                add_field => {
                    "[meta][app_port]" => "%{[meta][dst_port]}"
                }
            }
        } else {
            # otherwise set to unknown with app port to 0
            mutate {
                add_field => {
                    "[meta][app_name]" => "unknown"
                    "[meta][app_port]" => 0
                }
            }
        }

        #create detailed app name with proto and port info
        mutate {
            add_field => {
                "[meta][app_name_detail]" => "%{[meta][app_name]}:%{[meta][app_port]}/%{[meta][protocol]}"
            }
        }

        #Make sure app port is integer
        mutate {
            convert => {
                "[meta][app_port]" => "integer"
            }
        }
    }
}