filter {
    ###
    # Mark traffic class based on DSCP bits or top MPLS EXP field
    ###

    # Evaluate fields
    if [meta][dscp] == 0 and [meta][mpls][exp1] == 0 {
      # If not set or both set to 0 then mark as Best Effort
      mutate {
        add_field => {
          "[meta][traffic_class]" => "Best Effort"
        }
      }
    } else {
      # First try the dscp bits
      if [meta][dscp] and [meta][dscp] != 0 {
        translate {
            field => "[meta][dscp]"
            destination => "[meta][traffic_class]"
            dictionary_path => "/etc/stardust/pipeline/dscp_traffic_classes.json"
            refresh_behaviour => "replace"
            refresh_interval => 3600
        }
      }

      #if we didn't find a match with the DSCP bits then check the MPLS EXP field
      if ![meta][traffic_class] and [meta][mpls][exp1] and [meta][mpls][exp1] != 0 {
        translate {
            field => "[meta][mpls][exp1]"
            destination => "[meta][traffic_class]"
            dictionary_path => "/etc/stardust/pipeline/mpls_exp_traffic_classes.json"
            refresh_behaviour => "replace"
            refresh_interval => 3600
        }
      }

      #if neither of the above lookups worked then mark as Unknown
      if ![meta][traffic_class] {
        mutate {
          add_field => {
            "[meta][traffic_class]" => "Unknown"
          }
        }
      }

    }
}