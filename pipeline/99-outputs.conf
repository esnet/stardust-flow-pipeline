

output {
    #Split the l2, loprio, edge, and core interfaces so different ILM policies can be applied
    if [meta][is_l2] {
      elasticsearch {
            hosts => [
                "${elastic_output_host_url}"
            ]
            ssl => "true"
            cacert => "/etc/stardust/pipeline/certificates/elastic.cer"
            ssl_certificate_verification => false
            user => "${elastic_output_user}"
            password => "${elastic_output_password}"
            manage_template => false
            ilm_enabled => "true"
            ilm_pattern => "{now/d}-000001"
            ilm_rollover_alias => "stardust_flow_l2"
            ilm_policy => "timeseries-flow-l2"
      }
    } else if "stardust_flow_loprio" in [tags] {
        elasticsearch {
            hosts => [
                "${elastic_output_host_url}"
            ]
            ssl => "true"
            cacert => "/etc/stardust/pipeline/certificates/elastic.cer"
            ssl_certificate_verification => false
            user => "${elastic_output_user}"
            password => "${elastic_output_password}"
            manage_template => false
            ilm_enabled => "true"
            ilm_pattern => "{now/d}-000001"
            ilm_rollover_alias => "stardust_flow_loprio"
            ilm_policy => "timeseries-flow-loprio"
        }
    } else if [meta][iface_in][intercloud] or [meta][iface_out][intercloud] {
        elasticsearch {
            hosts => [
                "${elastic_output_host_url}"
            ]
            ssl => "true"
            cacert => "/etc/stardust/pipeline/certificates/elastic.cer"
            ssl_certificate_verification => false
            user => "${elastic_output_user}"
            password => "${elastic_output_password}"
            manage_template => false
            ilm_enabled => "true"
            ilm_pattern => "{now/d}-000001"
            ilm_rollover_alias => "stardust_flow_edge"
            ilm_policy => "timeseries-flow"
        }
    } else {
        elasticsearch {
            hosts => [
                "${elastic_output_host_url}"
            ]
            ssl => "true"
            cacert => "/etc/stardust/pipeline/certificates/elastic.cer"
            ssl_certificate_verification => false
            user => "${elastic_output_user}"
            password => "${elastic_output_password}"
            #need different name since logstash overwrites pattern
            manage_template => false
            ilm_enabled => "true"
            ilm_pattern => "{now/d}-000001"
            ilm_rollover_alias => "stardust_flow_core"
            ilm_policy => "timeseries-flow"
        }
    }
}

